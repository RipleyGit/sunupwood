/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.chainof.sunup.controller.api;

import cn.chainof.sunup.controller.dto.data.LabelDTO;
import cn.chainof.sunup.controller.dto.data.LabelList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "Product", description = "the Product API")
public interface ProductApi {

    @ApiOperation(value = "添加标签", nickname = "addLabel", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/project/labels",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addLabel(@ApiParam(value = "" ,required=true )  @Valid @RequestBody LabelDTO label);


    @ApiOperation(value = "删除标签", nickname = "deletedLable", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/project/labels",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deletedLable(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "获取标签列表", nickname = "getLabels", notes = "", response = LabelList.class, authorizations = {
        @Authorization(value = "token")
    }, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = LabelList.class) })
    @RequestMapping(value = "/project/labels",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<LabelList> getLabels(@ApiParam(value = "") @Valid @RequestParam(value = "keyword", required = false) String keyword);


    @ApiOperation(value = "修改标签", nickname = "modifyLabel", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/project/labels",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> modifyLabel(@ApiParam(value = "" ,required=true )  @Valid @RequestBody LabelDTO label);

}
