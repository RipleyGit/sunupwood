/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.chainof.sunup.controller.api;

import cn.chainof.sunup.controller.dto.data.ProductDesignDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "ProductDesign", description = "the ProductDesign API")
public interface ProductDesignApi {

    @ApiOperation(value = "产品设计-添加", nickname = "addProductDesign", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProductDesign", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "添加成功") })
    @RequestMapping(value = "/project/design/product",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addProductDesign(@ApiParam(value = "产品设计内容" ,required=true )  @Valid @RequestBody ProductDesignDTO productDto);


    @ApiOperation(value = "删除装饰内容", nickname = "deleteById", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProductDesign", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "删除成功") })
    @RequestMapping(value = "/project/design/product",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteById(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "产品设计内容信息", nickname = "getProductDesignDTOInfo", notes = "", response = ProductDesignDTO.class, authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProductDesign", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "获取成功", response = ProductDesignDTO.class) })
    @RequestMapping(value = "/project/design/product",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ProductDesignDTO> getProductDesignDTOInfo(@NotNull @ApiParam(value = "唯一ID", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "获取产品内容列表", nickname = "queryProductList", notes = "", response = ProductDesignDTO.class, responseContainer = "List", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProductDesign", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "产品设计内容列表", response = ProductDesignDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/project/design/product/queryList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ProductDesignDTO>> queryProductList(@ApiParam(value = "当前页数", defaultValue = "0") @Valid @RequestParam(value = "pageIndex", required = false, defaultValue="0") Integer pageIndex,@ApiParam(value = "页面大小", defaultValue = "5") @Valid @RequestParam(value = "pageSize", required = false, defaultValue="5") Integer pageSize);


    @ApiOperation(value = "修改装饰设计内容", nickname = "updateProductDesign", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProductDesign", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "修改成功") })
    @RequestMapping(value = "/project/design/product",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateProductDesign(@ApiParam(value = "产品设计内容" ,required=true )  @Valid @RequestBody ProductDesignDTO designDto);

}
