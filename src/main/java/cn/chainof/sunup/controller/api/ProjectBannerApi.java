/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.chainof.sunup.controller.api;

import cn.chainof.sunup.controller.dto.data.BannerDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "ProjectBanner", description = "the ProjectBanner API")
public interface ProjectBannerApi {

    @ApiOperation(value = "新增banner图", nickname = "addBanner", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectBanner", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "新增成功") })
    @RequestMapping(value = "/project/other/banner",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addBanner(@ApiParam(value = "序号，图片必须有" ,required=true )  @Valid @RequestBody BannerDTO banner);


    @ApiOperation(value = "删除banner图信息", nickname = "deleteBannerById", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectBanner", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "删除成功") })
    @RequestMapping(value = "/project/other/banner",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteBannerById(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "获取banner图信息", nickname = "getBannerById", notes = "", response = BannerDTO.class, authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectBanner", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "banner图内容", response = BannerDTO.class) })
    @RequestMapping(value = "/project/other/banner",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BannerDTO> getBannerById(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "Banner图列表", nickname = "getBannerList", notes = "", response = BannerDTO.class, responseContainer = "List", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectBanner", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Banner图列表", response = BannerDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/project/other/banner/queryList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<BannerDTO>> getBannerList(@ApiParam(value = "当前页数", defaultValue = "0") @Valid @RequestParam(value = "pageIndex", required = false, defaultValue="0") Integer pageIndex,@ApiParam(value = "页面大小", defaultValue = "3") @Valid @RequestParam(value = "pageSize", required = false, defaultValue="3") Integer pageSize);


    @ApiOperation(value = "新增banner图", nickname = "updateBanner", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectBanner", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "修改成功") })
    @RequestMapping(value = "/project/other/banner",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateBanner(@ApiParam(value = "" ,required=true )  @Valid @RequestBody BannerDTO banner);

}
