/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.chainof.sunup.controller.api;

import cn.chainof.sunup.controller.dto.data.NewsDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "ProjectNews", description = "the ProjectNews API")
public interface ProjectNewsApi {

    @ApiOperation(value = "添加新闻", nickname = "addNews", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "新增成功") })
    @RequestMapping(value = "/project/center/news",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> addNews(@ApiParam(value = "" ,required=true )  @Valid @RequestBody NewsDTO newsDto);


    @ApiOperation(value = "删除新闻", nickname = "deleteByIds", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "删除成功") })
    @RequestMapping(value = "/project/center/news",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteByIds(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "查看新闻内容", nickname = "getNewsInfo", notes = "", response = NewsDTO.class, authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "新闻内容信息", response = NewsDTO.class) })
    @RequestMapping(value = "/project/center/news",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<NewsDTO> getNewsInfo(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "id", required = true) String id);


    @ApiOperation(value = "查看新闻内容", nickname = "getNewsInfoList", notes = "", response = NewsDTO.class, responseContainer = "List", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "新闻内容信息", response = NewsDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/project/center/newsList",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<NewsDTO>> getNewsInfoList(@ApiParam(value = "") @Valid @RequestParam(value = "key", required = false) String key,@ApiParam(value = "当前页数", defaultValue = "0") @Valid @RequestParam(value = "pageIndex", required = false, defaultValue="0") Integer pageIndex,@ApiParam(value = "页面大小", defaultValue = "6") @Valid @RequestParam(value = "pageSize", required = false, defaultValue="6") Integer pageSize);


    @ApiOperation(value = "修改新闻", nickname = "modifyNewsInfo", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "修改成功") })
    @RequestMapping(value = "/project/center/news",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> modifyNewsInfo(@ApiParam(value = "" ,required=true )  @Valid @RequestBody NewsDTO newsDto);


    @ApiOperation(value = "查看新闻内容", nickname = "newsListByStyle", notes = "", response = NewsDTO.class, responseContainer = "List", authorizations = {
        @Authorization(value = "token")
    }, tags={ "ProjectNews", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "新闻内容信息", response = NewsDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/project/center/newsListByStyle",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<NewsDTO>> newsListByStyle(@NotNull @ApiParam(value = "新闻类型：1/公司新闻；2/行业新闻", required = true) @Valid @RequestParam(value = "style", required = true) String style,@ApiParam(value = "当前页数", defaultValue = "0") @Valid @RequestParam(value = "pageIndex", required = false, defaultValue="0") Integer pageIndex,@ApiParam(value = "页面大小", defaultValue = "6") @Valid @RequestParam(value = "pageSize", required = false, defaultValue="6") Integer pageSize);

}
