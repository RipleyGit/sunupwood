/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cn.chainof.sunup.controller.api;

import cn.chainof.sunup.controller.dto.data.UserDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "User", description = "the User API")
public interface UserApi {

    @ApiOperation(value = "用户登陆", nickname = "login", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/user/login",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> login(@ApiParam(value = "" ,required=true )  @Valid @RequestBody UserDTO user);


    @ApiOperation(value = "用户登出", nickname = "loginOut", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/user/loginOut",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> loginOut();


    @ApiOperation(value = "注册用户", nickname = "registerUser", notes = "", authorizations = {
        @Authorization(value = "token")
    }, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success") })
    @RequestMapping(value = "/user/register",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> registerUser(@ApiParam(value = "" ,required=true )  @Valid @RequestBody UserDTO user);

}
